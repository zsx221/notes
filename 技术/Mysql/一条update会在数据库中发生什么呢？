听说mysql有一项特殊的本领，就是可以恢复到半个月内任意一秒的状态？牛的
那怎么实现的呢？
正常来说一条更新语句update T set c=c+1 where ID=2;
会经过正常的几个步骤：
1、连接器：客户端和服务器建立连接，获取客服端的权限。
2、分析器：经过词分析器、语法分析器之后，mysql大概知道你想要做什么了，判断出你是想update数据
3、查缓存：mysql:8.0之前存在查询缓存，查看之前有没有相同的操作，但这一步对于更新来说会跳过的，因为每次更新都会清理缓存。
4、优化器：mysql通过优化器知道应该怎么做，并且选择了执行方案，提供给执行器。
5、执行器：mysql选择ID=2这一行，先去看看缓存里面有，有没有之前查过ID=2的数据，中了就直接拿出来，没有就先去磁盘去看，找到之后就读到内存。然后给c+1，写到新的一行里面去
          然后新行更新到内存里面，再写到redo log(重做log)，并且修改状态为prepare，然后写到binlog里面，写完之后并且提交并且就去修改redo log这条数据的状态为commit
    当然其中的操作包括存储引擎也在运作：比如查看缓存是否有ID=2的数据，中了就直接拿出来，没有就先去磁盘去看。 以及新行更新到内存、写redo log，和最后一步提交事务。

其中牵涉到了redo log，这个是我在之前是没有看到的，这里提出几个问题，并作出回答。
  1、redo log是什么？
    答：redo log 是innoDB独有的一种log文档，它是存储引擎中的物理日志，是使用循环操作来写的，不是持久保存的。
  2、redo log解决了什么问题？
    答：redo log具有在数据库宕机或者是重启之后，使得数据库之前提交的记录都不会丢失。
  3、redo log怎么解决的呢？
    答：回到执行器的操作，在更新到内存后，写到redo log中，修改状态为prepare，然后写到binlog里面，这个时候数据库突然宕机，没来得及储存到磁盘中mysql就挂了，那这个时候怎么办呢？会
        导致mysql出现数据库的真实数据和逻辑数据不一致吗？
        不会，redo log被mysql重新解析，然后重放一遍，在合适的时候后续再在合适的时机，将该数据重新刷入磁盘。
