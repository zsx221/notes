今天看到一篇文章：undo log版本链与ReadView机制如何让事务读取到该读的数据
提出几个疑问：
1）
  1、undo log是什么？
    答：mysql中，当我们进行数据的增删改操作时候，会写 redo log(解决数据库宕机重启丢失数据的问题)和 binlog(主要用来做复制、数据备份等操作)，
      另外还会写 undo log，它是为了实现事务的回滚操作。
      所以，undo log是数据表里面对每行数据记录的存储，代表着数据的各种版本.
  2、undo log解决了什么问题？
    答:undo log解决了，准确的来说，他实现了事务的回滚操作的记录工作。
  3、undo log怎么解决问题的？
    答：undo log，是每行数据的一个记录，有几个比较重要的字段，当前数据的事务id，当前数据行的数据data，以及当前数据行的上一个版本指针。
2）
  1、ReadView是什么？
    答：readview其实是一个保存事务id的list表，记录的是本事务执行时，mysql还有哪些事务还在执行，哪些事务还没提交。（当前系统的活跃事务）
      大致有四个字段creator_trx_id(当前事务的id),m_ids(当前活跃的所有事务)，min_trx_id(目前活跃事务最小id),max_trx_id(目前活跃事务最大id)
  2、ReadView解决了什么问题？
    答：ReadView指定了一种规则，这种规则让事务读取到该读取的数据。
  3、ReadView怎么解决问题的？
    答：ReadView通过creator_trx_id记录当前事务的id，来访问数据库中的数据，row_trx_id所对应的data，当然，需要满足以下条件才能查询到最新数据
      (1) row_trx_id小于min_trx_id,这表示在事务开启之前，该数据就是最新的数据。
      (2) row_trx_id 处于 min_trx_id 和 max_trx_id 的范围之间,且row_trx_id不在m_ids数组中
      表示的是在当前事务开启之前，其他事务将数据修改后就已经提交了事务，所以当前事务能读取到。
      (这个需要继续去学，为什么row_trx_id处于 min_trx_id 和 max_trx_id 之间，但是却又不在 m_id 数组内呢？)
    
