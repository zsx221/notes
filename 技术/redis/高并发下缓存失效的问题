高并发下缓存失效的问题
    缓存雪崩:
      缓存雪崩是指在我们设置缓存时key采用了相同的过期时间，导致缓存在某一时刻同时失效，请求全部转发到DB，DB瞬时压力过重雪崩。
        解决:
        原有的失效时间基础上增加一个随机值，比如1-5分钟随机，这样每一个缓存的过期时间的重复率就会降低，就很难引发集体失效的事件。

 
    缓存穿透:
      指查询一个一定不存在的数搪入由于缓存是不命中，将去查询数搪库，但是数据库也无此记录，我们没有将这次查询的null写入缓存
       这将导致这个不存在的数据每次请求都要到存储层去查询，失去了缓存的意义。
           风险：
              利用不存在的数据进行攻击，数据库的瞬时压力增大，最终导致奔溃。
           解决：
              bull结果存于缓存，并加入短暂的过期时间。
   
   缓存击透:
      对于一些设置了过期时间的key，如果这些kev可能会在某些时间点被超高并发地访问，是一种非常“热点”的数据。
      如果这个key在大量请求同时进来前正好失效，那么所有对这个key的数据查询都落到db，我们称为缓存击穿。
    解决:加锁
      大量并发只让一个去查，其他人等待，查到以后释放锁，其他人获取到锁，先查缓存，就会有数据，不用去db
